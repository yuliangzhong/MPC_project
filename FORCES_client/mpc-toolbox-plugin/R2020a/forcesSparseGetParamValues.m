function params = forcesSparseGetParamValues(data,onlinedata,x,yref,uref,md,trueLastMV)
%% FORCESPRO "mpc-toolbox-plugin" simulation utility

%   Author(s): Rong Chen, MathWorks Inc.
%
%   Copyright 2019-2021 The MathWorks, Inc.

% data is a core data structure generated by "mpcToForces"
% onlinedata is a structure where 
%   yref is a matrix of p-by-ny values for output references
%   uref is a matrix pf p-by-nmv values for MV reference
%   md is a matrix of (p+1)-by-nmd values for MD
%   externalMV is a nmv-by-1 vector for true previous MV used in the plant 
%
% params(1) is "c", a column vector stacked from step 1 to p
% params(2) is "f", a column vector stacked from step 1 to p
% optional parameters:
%   "H" when "data.UseOnlineWeight" is true;

% For discrete-time prediction model defined as
%   x[k+1] = A*x[k] + Bmv*mv[k] + Bmd*md[k] + Bdx*1
%   y[k] = C*x[k] + 0*mv[k] + Dmd*md[k]
% where x/mv/md/y are deviation variables and Bdx is the nominal dx.
%
% Model needs to be translated into FORCESPRO equality constraints.
% Therefore, we have for i=1 (as prediction step k+1)
%   DD[1] = [0 0 -I C; Bmv 0 0 -I; I -I 0 0]
%   cc[1] = [-Dmd*md[k+1]; -(A*x[k]+Bmd*md[k]+Bdx*1); lastMV]
% and for i=2,..p (as prediction steps k+2..k+p)
%   CC[i-1] = [0 0 0 0; 0 0 0 A; -I 0 0 0] 
%   DD[i] = [0 0 -I C; Bmv 0 0 -I; I -I 0 0]
%   cc[i] = [-Dmd*md(k+i); -Bmd*md[k+i-1]-Bdx*1; 0]
% For fixed prediction model, CC and DD do not change.  "cc" is a function
% of run time MD signal and thus passed in as parameter.
